import React from 'react';
import { motion } from 'framer-motion';
import { Play, Star, Clock, TrendingUp, Award, Book } from 'lucide-react';
import { ReadingSession, UserProgress } from '../types';

interface DashboardProps {
  userProgress: UserProgress;
  recentSessions: ReadingSession[];
  onStartSession: (sessionId: string) => void;
}

const Dashboard: React.FC<DashboardProps> = ({ 
  userProgress, 
  recentSessions, 
  onStartSession 
}) => {
  const availableSessions: ReadingSession[] = [
    {
      id: '1',
      title: 'The Little Red Hen',
      text: 'Once upon a time, there was a little red hen who lived on a farm. She was a very hardworking hen and always busy with her daily tasks. One day, while walking around the farmyard, she found some grains of wheat.',
      difficulty: 'beginner',
      recordings: []
    },
    {
      id: '2',
      title: 'The Solar System',
      text: 'Our solar system consists of the Sun and all the celestial bodies that orbit around it. This includes eight planets, their moons, asteroids, comets, and other space debris. The Sun, which is a medium-sized star, provides the energy that makes life possible on Earth.',
      difficulty: 'intermediate',
      recordings: []
    },
    {
      id: '3',
      title: 'Climate Change and Environmental Science',
      text: 'Climate change represents one of the most significant challenges facing humanity in the twenty-first century. The phenomenon is characterized by long-term alterations in global weather patterns, primarily attributed to increased concentrations of greenhouse gases in the atmosphere.',
      difficulty: 'advanced',
      recordings: []
    }
  ];

  const getDifficultyColor = (difficulty: string) => {
    switch (difficulty) {
      case 'beginner': return 'bg-gradient-to-r from-success-400 to-success-600';
      case 'intermediate': return 'bg-gradient-to-r from-warning-400 to-warning-600';
      case 'advanced': return 'bg-gradient-to-r from-accent-400 to-accent-600';
      default: return 'bg-gradient-to-r from-primary-400 to-primary-600';
    }
  };

  const stats = [
    {
      label: 'Reading Time',
      value: `${Math.floor(userProgress.totalReadingTime / 60)}m`,
      icon: Clock,
      color: 'text-blue-600'
    },
    {
      label: 'Accuracy',
      value: '92%',
      icon: TrendingUp,
      color: 'text-green-600'
    },
    {
      label: 'Badges',
      value: userProgress.badges.length.toString(),
      icon: Award,
      color: 'text-purple-600'
    },
    {
      label: 'Sessions',
      value: userProgress.completedSessions.toString(),
      icon: Book,
      color: 'text-orange-600'
    }
  ];

  return (
    <div className="max-w-7xl mx-auto p-6 space-y-8">
      {/* Welcome Section */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center"
      >
        <h2 className="text-3xl font-bold text-gray-800 mb-2">
          Welcome back! Ready to practice reading?
        </h2>
        <p className="text-gray-600">
          Continue your English fluency journey with interactive lessons and AI feedback
        </p>
      </motion.div>

      {/* Stats Grid */}
      <motion.div 
        className="grid grid-cols-2 md:grid-cols-4 gap-4"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.2 }}
      >
        {stats.map((stat, index) => (
          <motion.div
            key={stat.label}
            className="bg-white rounded-xl shadow-lg p-6 text-center"
            whileHover={{ scale: 1.05 }}
            transition={{ delay: index * 0.1 }}
          >
            <stat.icon className={`h-8 w-8 mx-auto mb-2 ${stat.color}`} />
            <div className="text-2xl font-bold text-gray-800">{stat.value}</div>
            <div className="text-sm text-gray-600">{stat.label}</div>
          </motion.div>
        ))}
      </motion.div>

      {/* Available Sessions */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.4 }}
      >
        <h3 className="text-2xl font-bold text-gray-800 mb-6">Choose Your Reading Level</h3>
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
          {availableSessions.map((session, index) => (
            <motion.div
              key={session.id}
              className="bg-white rounded-xl shadow-lg overflow-hidden"
              whileHover={{ scale: 1.02 }}
              transition={{ delay: index * 0.1 }}
            >
              <div className={`${getDifficultyColor(session.difficulty)} p-4`}>
                <div className="flex items-center justify-between text-white">
                  <span className="text-sm font-medium uppercase tracking-wide">
                    {session.difficulty}
                  </span>
                  <Star className="h-5 w-5" />
                </div>
              </div>
              
              <div className="p-6">
                <h4 className="text-xl font-semibold text-gray-800 mb-3">
                  {session.title}
                </h4>
                <p className="text-gray-600 text-sm mb-4 line-clamp-3">
                  {session.text.substring(0, 120)}...
                </p>
                
                <motion.button
                  onClick={() => onStartSession(session.id)}
                  className="w-full bg-gradient-to-r from-primary-500 to-primary-600 text-white py-3 px-4 rounded-lg font-semibold shadow-md hover:shadow-lg transition-all flex items-center justify-center space-x-2"
                  whileHover={{ scale: 1.02 }}
                  whileTap={{ scale: 0.98 }}
                >
                  <Play className="h-5 w-5" />
                  <span>Start Reading</span>
                </motion.button>
              </div>
            </motion.div>
          ))}
        </div>
      </motion.div>

      {/* Recent Activity */}
      {recentSessions.length > 0 && (
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.6 }}
        >
          <h3 className="text-2xl font-bold text-gray-800 mb-6">Recent Activity</h3>
          <div className="bg-white rounded-xl shadow-lg p-6">
            <div className="space-y-4">
              {recentSessions.slice(0, 3).map((session) => (
                <div key={session.id} className="flex items-center justify-between py-3 border-b border-gray-100 last:border-b-0">
                  <div>
                    <h4 className="font-medium text-gray-800">{session.title}</h4>
                    <p className="text-sm text-gray-600">
                      Completed â€¢ Score: {session.score || 0}%
                    </p>
                  </div>
                  <div className="text-sm text-gray-500">
                    {session.completedAt?.toLocaleDateString()}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </motion.div>
      )}
    </div>
  );
};

export default Dashboard;
